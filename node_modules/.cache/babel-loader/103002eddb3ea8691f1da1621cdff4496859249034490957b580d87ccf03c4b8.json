{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudoa\\\\OneDrive\\\\Documents\\\\codes\\\\reactjs\\\\mealapp\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [httpError, setError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\"https://realtime-database-c6d84-default-rtdb.firebaseio.com/meals.json\");\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const data = await response.json();\n        const loadedMeals = [];\n        for (const key in data) {\n          loadedMeals.push({\n            id: key,\n            name: data[key].name,\n            description: data[key].description,\n            price: data[key].price\n          });\n        }\n        setMeals(loadedMeals);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err);\n        console.log(err.message);\n      }\n    };\n    // fetchMeals();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  console.log(meals);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"L8ppV4mxTSPUXHv73E1AegE+UVs=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setError","fetchMeals","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","err","console","log","message","MealsLoading","MealsError","mealsList","map","meal"],"sources":["C:/Users/sudoa/OneDrive/Documents/codes/reactjs/mealapp/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [httpError, setError] = useState();\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(\r\n          \"https://realtime-database-c6d84-default-rtdb.firebaseio.com/meals.json\"\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        const data = await response.json();\r\n\r\n        const loadedMeals = [];\r\n        for (const key in data) {\r\n          loadedMeals.push({\r\n            id: key,\r\n            name: data[key].name,\r\n            description: data[key].description,\r\n            price: data[key].price,\r\n          });\r\n        }\r\n        setMeals(loadedMeals);\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err);\r\n        console.log(err.message);\r\n      }\r\n    };\r\n    // fetchMeals();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <section className={classes.MealsLoading}>Loading...</section>;\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={classes.MealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  console.log(meals);\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,6BAA6B;AAAC;AAElD,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,SAAS,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,EAAE;EACxCD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,YAAY;MAC7BH,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wEAAwE,CACzE;QAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAElC,MAAMC,WAAW,GAAG,EAAE;QACtB,KAAK,MAAMC,GAAG,IAAIH,IAAI,EAAE;UACtBE,WAAW,CAACE,IAAI,CAAC;YACfC,EAAE,EAAEF,GAAG;YACPG,IAAI,EAAEN,IAAI,CAACG,GAAG,CAAC,CAACG,IAAI;YACpBC,WAAW,EAAEP,IAAI,CAACG,GAAG,CAAC,CAACI,WAAW;YAClCC,KAAK,EAAER,IAAI,CAACG,GAAG,CAAC,CAACK;UACnB,CAAC,CAAC;QACJ;QACAlB,QAAQ,CAACY,WAAW,CAAC;QACrBV,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOiB,GAAG,EAAE;QACZjB,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACe,GAAG,CAAC;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;MAC1B;IACF,CAAC;IACD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIrB,SAAS,EAAE;IACb,oBAAO;MAAS,SAAS,EAAEJ,OAAO,CAAC0B,YAAa;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU;EACvE;EAEA,IAAIpB,SAAS,EAAE;IACb,oBACE;MAAS,SAAS,EAAEN,OAAO,CAAC2B,UAAW;MAAA,uBACrC;QAAA,UAAIrB;MAAS;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACV;EAEd;EAEAiB,OAAO,CAACC,GAAG,CAACtB,KAAK,CAAC;EAClB,MAAM0B,SAAS,GAAG1B,KAAK,CAAC2B,GAAG,CAAEC,IAAI,iBAC/B,QAAC,QAAQ;IAEP,EAAE,EAAEA,IAAI,CAACZ,EAAG;IACZ,IAAI,EAAEY,IAAI,CAACX,IAAK;IAChB,WAAW,EAAEW,IAAI,CAACV,WAAY;IAC9B,KAAK,EAAEU,IAAI,CAACT;EAAM,GAJbS,IAAI,CAACZ,EAAE;IAAA;IAAA;IAAA;EAAA,QAMf,CAAC;EAEF,oBACE;IAAS,SAAS,EAAElB,OAAO,CAACE,KAAM;IAAA,uBAChC,QAAC,IAAI;MAAA,uBACH;QAAA,UAAK0B;MAAS;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA;EACf;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GAnEI3B,cAAc;AAAA,KAAdA,cAAc;AAqEpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}